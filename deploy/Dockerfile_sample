#First stage image
FROM composer:1.6.5 as build
WORKDIR /app
COPY ./ /app

#install application dependecies from the lock file
RUN composer install \
  --optimize-autoloader \
  --no-interaction \
  --no-progress

# continue stage build with the desired image and copy the source including the
# dependencies downloaded by composer
FROM nginx:alpine

# Install packages and remove default server definition
RUN apk --no-cache add php7 php7-fpm php7-opcache php7-pdo php7-pdo_mysql \
    php7-json php7-openssl php7-curl php7-zlib php7-xml php7-phar php7-intl \
    php7-dom php7-xmlreader php7-ctype php7-session php7-mbstring php7-gd \
    curl supervisor && \
    rm /etc/nginx/conf.d/default.conf
#php versions 7.3.19-r0

# set env vars
ENV APP_NAME "Travellist"
ENV APP_ENV "dev"
# $ python -c 'import base64; import os; print(base64.encodestring(os.urandom(32)))'
ENV APP_KEY base64:REPLACE_WITH_RANDOM_BASE64_ENCODED_STRING
ENV APP_DEBUG true
#ENV APP_URL http://localhost

ENV LOG_CHANNEL "stack"

ENV DB_CONNECTION "mysql"
#ENV DB_HOST XX.XXX.XXXX.XX
#ENV DB_PORT 3306
ENV DB_DATABASE "REPLACE_WITH_CLOUD_SQL_MYSQL_DB_NAME"
ENV DB_USERNAME "REPLACE_WITH_CLOUD_SQL_MYSQL_USERNAME"
ENV DB_PASSWORD "REPLACE_WITH_CLOUD_SQL_MYSQL_DB_SUPER_SECRET_PASSWORD"
ENV DB_SOCKET "/cloudsql/REPLACE_WITH_CLOUD_SQL_CONNECTION_NAME"
ENV MYSQL_ATTR_TIMEOUT 5
ENV BROADCAST_DRIVER "log"
ENV CACHE_DRIVER "file"
ENV QUEUE_CONNECTION "sync"
ENV SESSION_DRIVER "cookie"
ENV SESSION_LIFETIME 120

#ENV MAIL_DRIVER "smtp"
#ENV MAIL_HOST "SMTP_HOST"
#ENV MAIL_PORT SMTP_PORT
#ENV MAIL_USERNAME null
#ENV MAIL_PASSWORD null
#ENV MAIL_ENCRYPTION null

#ENV PUSHER_APP_ID 
#ENV PUSHER_APP_KEY 
#ENV PUSHER_APP_SECRET 
#ENV PUSHER_APP_CLUSTER mt1

#ENV MIX_PUSHER_APP_KEY "${PUSHER_APP_KEY}"
#ENV MIX_PUSHER_APP_CLUSTER "${PUSHER_APP_CLUSTER}"

# Configure nginx
COPY nginx/default.conf /etc/nginx/conf.d/default.conf

# Configure PHP-FPM
COPY fpm/fpm-pool.conf /etc/php7/php-fpm.d/www.conf

# Configure supervisord
COPY nginx/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Set up directories
RUN mkdir -p /var/log/php-fpm && \
    mkdir -p /usr/share/nginx/html && \
    mkdir -p /var/run/php

# Make sure files/folders needed by the processes are accessable 
# when they run under the nginx user
RUN chown -R nginx.nginx /usr/share/nginx/html && \
  chown -R nginx.nginx /run && \
  chown -R nginx.nginx /var/run/php && \
  chown -R nginx.nginx /var/log/nginx && \
  chown -R nginx.nginx /var/log/php-fpm

# Switch to use a non-root user from here on
USER nginx

# Add application
COPY --chown=nginx --from=build /app /usr/share/nginx/html/

# 8080 port for cloud run
EXPOSE 8080

#CMD ["nginx","-g","daemon off;"]

# Let supervisord start nginx & php-fpm
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
