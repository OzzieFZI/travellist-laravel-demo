events {
    worker_connections 1024;
    }

http {

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Default server definition
    server {
        listen 8080;
        server_name  localhost;
        root /usr/share/nginx/html/public;
        #index index.php index.html;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri /index.php$is_args$args;
        }

        # Redirect server error pages to the static page /50x.html
        #error_page 500 502 503 504 /50x.html;
        #location = /50x.html {
        #    root /var/lib/nginx/html;
        #}

        location ~ ^/index\.php(/|$) {
            #fastcgi_pass unix:/run/php/php7-fpm.sock;
            #fastcgi_pass unix:/run/php-fpm7.2/php-fpm.sock;
            #fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
            #fastcgi_pass unix:/var/run/php7/php7-fpm.sock;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }

        location ~ \.php$ {
            return 404;
        }
    }
    
    # Include other server configs
    include /etc/nginx/conf.d/*.conf;
}
